{"version":3,"sources":["webpack://Dastal/webpack/universalModuleDefinition","webpack://Dastal/./src/structures/heap/binaryHeap.ts","webpack://Dastal/./src/structures/heap/binaryMaxHeap.ts","webpack://Dastal/./src/structures/heap/binaryMinHeap.ts","webpack://Dastal/./src/structures/list/linkedList.ts","webpack://Dastal/./src/structures/queue/arrayQueue.ts","webpack://Dastal/./src/structures/queue/linkedQueue.ts","webpack://Dastal/./src/structures/queue/priorityQueue.ts","webpack://Dastal/webpack/bootstrap","webpack://Dastal/webpack/runtime/compat get default export","webpack://Dastal/webpack/runtime/define property getters","webpack://Dastal/webpack/runtime/hasOwnProperty shorthand","webpack://Dastal/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","BinaryHeap","comparator","array","this","_comparator","element","n","length","i","Math","floor","_sinkDown","_find","index","last","pop","heap","toArray","push","_heapify","undefined","value","_bubbleUp","_ate","parentIndex","parent","childIndex","child","Array","from","BinaryMaxHeap","a","b","compare","iterables","iterable","BinaryMinHeap","LinkedList","_get","next","tail","unshift","node","head","out","par","ArrayQueue","size","shift","LinkedQueue","list","clear","get","PriorityQueue","peek","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"dastal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Dastal\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Dastal\"] = factory();\n\telse\n\t\troot[\"Dastal\"] = factory();\n})(self, function() {\nreturn ","import { Comparator } from '../../comparable';\nimport { Heap } from './heap';\n\nexport abstract class BinaryHeap<T> implements Heap<T> {\n    protected _comparator: Comparator<T>;\n\n    constructor(comparator: Comparator<T>, protected array: Array<T> = []) {\n        this._comparator = comparator;\n    }\n\n    protected abstract _ate(a: T, b: T): boolean;\n    abstract heapify(...iterables: Iterable<T>[]): BinaryHeap<T>;\n\n    protected _find(element: T): number {\n        const n = this.array.length;\n        for (let i = 0; i < n; ++i) {\n            if (this.array[i] === element) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    protected _heapify(array: Array<T>): void {\n        let i = Math.floor((array.length + 1) / 2) - 1;\n        while (i >= 0) {\n            this._sinkDown(--i, array);\n        }\n    }\n\n    clear(): void {\n        this.array.length = 0;\n    }\n\n    comparator(): Comparator<T> {\n        return this._comparator;\n    }\n\n    contains(element: T): boolean {\n        return this._find(element) >= 0;\n    }\n\n    delete(element: T): boolean {\n        const index = this._find(element);\n        if (index < 0) {\n            return false;\n        }\n\n        // If deleting the last value\n        const last = this.array.pop()!;\n        if (index >= this.array.length) {\n            return true;\n        }\n\n        // Add the last value to the\n        // deleted index and update the heap\n        this.array[index] = last;\n        this._sinkDown(index, this.array);\n        return true;\n    }\n\n    merge(heap: Heap<T>): this {\n        for (const element of heap.toArray()) {\n            this.array.push(element);\n        }\n        this._heapify(this.array);\n        return this;\n    }\n\n    peek(): T | undefined {\n        return this.array.length > 0 ? this.array[0] : undefined;\n    }\n\n    pop(): T | undefined {\n        if (this.array.length < 1) {\n            return undefined;\n        }\n\n        // Get the root and the last value\n        const value = this.array[0];\n        const last = this.array.pop();\n\n        // If value != last\n        if (this.array.length > 0) {\n            // Add the last value to\n            // the root and update the heap\n            this.array[0] = last!;\n            this._sinkDown(0, this.array);\n        }\n\n        return value;\n    }\n\n    push(value: T): void {\n        // Add new value to the end of the heap\n        this.array.push(value);\n\n        // Update the heap\n        this._bubbleUp(this.array.length - 1, this.array);\n    }\n\n    // Push a new value to the heap and then pop the root\n    pushPop(value: T): T {\n        // If empty or value is above or equal to root\n        if (this.array.length < 1 || this._ate(value, this.array[0])) {\n            return value;\n        }\n\n        // Swap the root and value\n        const root = this.array[0];\n        this.array[0] = value;\n        this._sinkDown(0, this.array);\n        return root;\n    }\n\n    // Pop the root of the heap and then push a new value\n    replace(value: T): T {\n        // If not empty\n        if (this.array.length > 0) {\n            // Swap the root with value\n            const root = this.array[0];\n            this.array[0] = value;\n            value = root;\n\n            // Update the heap\n            this._sinkDown(0, this.array);\n        }\n\n        return value;\n    }\n\n    get size(): number {\n        return this.array.length;\n    }\n\n    update(element: T): boolean {\n        const index = this._find(element);\n        if (index < 0) {\n            return false;\n        }\n        this._sinkDown(index, this.array);\n        this._bubbleUp(index, this.array);\n        return true;\n    }\n\n    protected _bubbleUp(index: number, array: Array<T>): void {\n        const value = array[index];\n\n        // Until we reach the top of the heap\n        while (index > 0) {\n            // Get the parent\n            const parentIndex = Math.floor((index + 1) / 2) - 1;\n            const parent = array[parentIndex]!;\n\n            // If the parent is above or equal to value, the heap is in order\n            if (this._ate(parent, value)) {\n                break;\n            }\n\n            // Swap the parent with value and continue\n            array[parentIndex] = value;\n            array[index] = parent;\n            index = parentIndex;\n        }\n    }\n\n    protected _sinkDown(index: number, array: Array<T>): void {\n        const n = array.length;\n        const value = array[index];\n\n        do {\n            // Compute the left child's index\n            let childIndex = 2 * index + 1;\n\n            // If no children exist\n            if (childIndex >= n) {\n                break;\n            }\n\n            // Decide which child to compare with\n            let child = array[childIndex];\n            if (childIndex + 1 < n && this._ate(array[childIndex + 1]!, child)) {\n                child = array[++childIndex]!;\n            }\n\n            // If value <= child\n            if (this._ate(value, child)) {\n                break;\n            }\n\n            // Swap value and child\n            array[index] = child;\n            array[childIndex] = value;\n            index = childIndex;\n        } while (true);\n    }\n\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n}\n","import { BinaryHeap } from './binaryHeap';\nimport { Heap } from './heap';\n\nexport class BinaryMaxHeap<T> extends BinaryHeap<T> {\n    protected _ate(a: T, b: T): boolean {\n        return this._comparator.compare(a, b) >= 0;\n    }\n\n    heapify(...iterables: Iterable<T>[]): BinaryMaxHeap<T> {\n        const array = [];\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                array.push(element);\n            }\n        }\n        this._heapify(array);\n        return new BinaryMaxHeap(this._comparator, array);\n    }\n}\n","import { BinaryHeap } from './binaryHeap';\nimport { Heap } from './heap';\n\nexport class BinaryMinHeap<T> extends BinaryHeap<T> {\n    protected _ate(a: T, b: T): boolean {\n        return this._comparator.compare(a, b) <= 0;\n    }\n\n    heapify(...iterables: Iterable<T>[]): BinaryMinHeap<T> {\n        const array = [];\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                array.push(element);\n            }\n        }\n        this._heapify(array);\n        return new BinaryMinHeap(this._comparator, array);\n    }\n}\n","import { List } from './list';\n\nexport interface LinkedNode<T> {\n    next: LinkedNode<T>;\n    value: T;\n}\n\nexport class LinkedList<T> implements List<T> {\n    protected length: number;\n    protected tail?: LinkedNode<T>;\n\n    constructor() {\n        this.length = 0;\n    }\n\n    add(index: number, value: T): boolean {\n        if (index < 0 || index > this.length) {\n            return false;\n        }\n        if (index === this.length) {\n            return this.push(value);\n        }\n        ++this.length;\n        const parent = this._get(index - 1);\n        parent.next = { value, next: parent.next };\n        return true;\n    }\n\n    clear(): void {\n        this.length = 0;\n        this.tail = undefined;\n    }\n\n    get(index: number): T | undefined {\n        if (index < 0 || index >= this.length) {\n            return undefined;\n        }\n        return this._get(index).value;\n    }\n\n    push(value: T): boolean {\n        this.unshift(value);\n        this.tail = this.tail!.next;\n        return true;\n    }\n\n    remove(index: number): T | undefined {\n        if (index < 0 || index >= this.length) {\n            return undefined;\n        }\n\n        const parent = this._get(index - 1);\n        const value = parent.next.value;\n        parent.next = parent.next.next;\n        if (--this.length < 1) {\n            this.tail = undefined;\n        }\n        return value;\n    }\n\n    set(index: number, element: T): T | undefined {\n        if (index < 0 || index >= this.length) {\n            return undefined;\n        }\n        const node = this._get(index);\n        const value = node.value;\n        node.value = element;\n        return value;\n    }\n\n    shift(): T | undefined {\n        if (this.tail == null) {\n            return undefined;\n        }\n\n        const head = this.tail.next;\n        this.tail.next = head.next;\n        if (--this.length < 1) {\n            this.tail = undefined;\n        }\n\n        return head.value;\n    }\n\n    get size(): number {\n        return this.length;\n    }\n\n    toArray(): T[] {\n        const n = this.length;\n        const out = new Array(n);\n\n        let par = this.tail;\n        for (let i = 0; i < n; ++i) {\n            par = par!.next;\n            out[i] = par.value;\n        }\n\n        return out;\n    }\n\n    unshift(value: T): boolean {\n        const head: LinkedNode<T> = { value } as any;\n        ++this.length;\n\n        if (this.tail == null) {\n            head.next = head;\n            this.tail = head;\n        } else {\n            head.next = this.tail.next;\n            this.tail.next = head;\n        }\n\n        return true;\n    }\n\n    protected _get(index: number): LinkedNode<T> {\n        let node = this.tail!;\n        while (index-- >= 0) {\n            node = node.next;\n        }\n        return node;\n    }\n}\n","import { Queue } from './queue';\n\nexport class ArrayQueue<T> implements Queue<T> {\n    constructor(protected array: Array<T> = []) {}\n\n    clear(): void {\n        this.array.length = 0;\n    }\n\n    enqueue(value: T): boolean {\n        this.array.push(value);\n        return true;\n    }\n\n    dequeue(): T | undefined {\n        return this.size < 1 ? undefined : this.array.shift()!;\n    }\n\n    peek(): T | undefined {\n        return this.size < 1 ? undefined : this.array[0];\n    }\n\n    get size(): number {\n        return this.array.length;\n    }\n\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n}\n","import { LinkedList, List } from '../list';\nimport { Queue } from './queue';\n\nexport class LinkedQueue<T> implements Queue<T> {\n    protected list: List<T>;\n\n    constructor(list: List<T> = new LinkedList()) {\n        this.list = list;\n    }\n\n    clear(): void {\n        this.list.clear();\n    }\n\n    dequeue(): T | undefined {\n        return this.list.shift();\n    }\n\n    enqueue(value: T): boolean {\n        return this.list.push(value);\n    }\n\n    peek(): T | undefined {\n        return this.list.get(0);\n    }\n\n    get size(): number {\n        return this.list.size;\n    }\n\n    toArray(): T[] {\n        return this.list.toArray();\n    }\n}\n","import { Comparator, Sorted } from '../../comparable';\nimport { Heap } from '../heap';\nimport { Queue } from './queue';\n\nexport class PriorityQueue<T> implements Queue<T>, Sorted<T> {\n    constructor(protected heap: Heap<T>) {}\n\n    clear(): void {\n        this.heap.clear();\n    }\n\n    comparator(): Comparator<T> {\n        return this.heap.comparator();\n    }\n\n    enqueue(value: T): boolean {\n        this.heap.push(value);\n        return true;\n    }\n\n    dequeue(): T | undefined {\n        return this.heap.pop();\n    }\n\n    peek(): T | undefined {\n        return this.heap.peek();\n    }\n\n    get size(): number {\n        return this.heap.size;\n    }\n\n    toArray(): T[] {\n        return this.heap.toArray();\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}