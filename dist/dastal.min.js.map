{"version":3,"sources":["webpack://Dastal/webpack/universalModuleDefinition","webpack://Dastal/./src/structures/heap/binaryHeap.ts","webpack://Dastal/./src/structures/heap/binaryMaxHeap.ts","webpack://Dastal/./src/structures/heap/binaryMinHeap.ts","webpack://Dastal/./src/structures/queue/arrayQueue.ts","webpack://Dastal/./src/structures/queue/linkedQueue.ts","webpack://Dastal/./src/structures/queue/priorityQueue.ts","webpack://Dastal/webpack/bootstrap","webpack://Dastal/webpack/runtime/compat get default export","webpack://Dastal/webpack/runtime/define property getters","webpack://Dastal/webpack/runtime/hasOwnProperty shorthand","webpack://Dastal/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","BinaryHeap","comparator","array","this","_comparator","i","Math","floor","length","_sinkDown","heap","toArray","element","push","_heapify","undefined","value","last","pop","_bubbleUp","ate","index","parentIndex","parent","n","childIndex","child","Array","from","BinaryMaxHeap","a","b","compare","iterable","merge","BinaryMinHeap","ArrayQueue","size","shift","LinkedQueue","tail","head","next","out","par","PriorityQueue","clear","peek","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,SAAU,GAAIH,GACK,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,IARnB,CASGK,MAAM,WACT,M,kbCPO,IAAeC,EAAtB,WAGI,WAAYC,GAA2D,IAAtBC,EAAsB,uDAAJ,GAAI,eAAtBA,QAC7CC,KAAKC,YAAcH,E,QAJ3B,O,EAAA,G,EAAA,uBAWI,SAAmBC,GAEf,IADA,IAAIG,EAAIC,KAAKC,OAAOL,EAAMM,OAAS,GAAK,GAAK,EACtCH,GAAK,GACRF,KAAKM,YAAYJ,EAAGH,KAdhC,mBAkBI,WACIC,KAAKD,MAAMM,OAAS,IAnB5B,wBAsBI,WACI,OAAOL,KAAKC,cAvBpB,mBA0BI,SAAMM,GAAqB,Q,25BAAA,CACDA,EAAKC,WADJ,IACvB,2BAAsC,KAA3BC,EAA2B,QAClCT,KAAKD,MAAMW,KAAKD,IAFG,8BAMvB,OAFAT,KAAKW,SAASX,KAAKD,OAEZC,OAhCf,kBAmCI,WACI,OAAOA,KAAKD,MAAMM,OAAS,EAAIL,KAAKD,MAAM,QAAKa,IApCvD,iBAuCI,WACI,KAAIZ,KAAKD,MAAMM,OAAS,GAAxB,CAKA,IAAMQ,EAAQb,KAAKD,MAAM,GACnBe,EAAOd,KAAKD,MAAMgB,MAUxB,OAPIf,KAAKD,MAAMM,OAAS,IAGpBL,KAAKD,MAAM,GAAKe,EAChBd,KAAKM,UAAU,EAAGN,KAAKD,QAGpBc,KAxDf,kBA2DI,SAAKA,GAEDb,KAAKD,MAAMW,KAAKG,GAGhBb,KAAKgB,UAAUhB,KAAKD,MAAMM,OAAS,EAAGL,KAAKD,SAhEnD,qBAoEI,SAAQc,GAEJ,GAAIb,KAAKD,MAAMM,OAAS,GAAKL,KAAKiB,IAAIJ,EAAOb,KAAKD,MAAM,IACpD,OAAOc,EAIX,IAAMvB,EAAOU,KAAKD,MAAM,GAGxB,OAFAC,KAAKD,MAAM,GAAKc,EAChBb,KAAKM,UAAU,EAAGN,KAAKD,OAChBT,IA9Ef,qBAkFI,SAAQuB,GAEJ,GAAIb,KAAKD,MAAMM,OAAS,EAAG,CAEvB,IAAMf,EAAOU,KAAKD,MAAM,GACxBC,KAAKD,MAAM,GAAKc,EAChBA,EAAQvB,EAGRU,KAAKM,UAAU,EAAGN,KAAKD,OAG3B,OAAOc,IA9Ff,gBAiGI,WACI,OAAOb,KAAKD,MAAMM,SAlG1B,uBAqGI,SAAoBa,EAAenB,GAI/B,IAHA,IAAMc,EAAQd,EAAMmB,GAGbA,EAAQ,GAAG,CAEd,IAAMC,EAAchB,KAAKC,OAAOc,EAAQ,GAAK,GAAK,EAC5CE,EAASrB,EAAMoB,GAGrB,GAAInB,KAAKiB,IAAIG,EAAQP,GACjB,MAIJd,EAAMoB,GAAeN,EACrBd,EAAMmB,GAASE,EACfF,EAAQC,KAtHpB,uBA0HI,SAAoBD,EAAenB,GAI/B,IAHA,IAAMsB,EAAItB,EAAMM,OACVQ,EAAQd,EAAMmB,KAEjB,CAEC,IAAII,EAAa,EAAIJ,EAAQ,EAG7B,GAAII,GAAcD,EACd,MAIJ,IAAIE,EAAQxB,EAAMuB,GAMlB,GALIA,EAAa,EAAID,GAAKrB,KAAKiB,IAAIlB,EAAMuB,EAAa,GAAKC,KACvDA,EAAQxB,IAAQuB,IAIhBtB,KAAKiB,IAAIJ,EAAOU,GAChB,MAIJxB,EAAMmB,GAASK,EACfxB,EAAMuB,GAAcT,EACpBK,EAAQI,KArJpB,qBAyJI,WACI,OAAOE,MAAMC,KAAKzB,KAAKD,Y,iBA1J/B,M,i7BCAO,IAAM2B,EAAb,a,kOAAA,U,QAAA,G,EAAA,E,+YAAA,6D,EAAA,G,EAAA,kBACI,SAAcC,EAAMC,GAChB,OAAO5B,KAAKC,YAAY4B,QAAQF,EAAGC,IAAM,IAFjD,qBAKI,SAAQE,GACJ,IAAM/B,EAAQyB,MAAMC,KAAKK,GAEzB,OADA9B,KAAKW,SAASZ,GACP,IAAI2B,EAAc1B,KAAKC,YAAaF,KARnD,kBAWI,SAAKQ,GAED,OADY,IAAImB,EAAc1B,KAAKC,YAAauB,MAAMC,KAAKzB,KAAKD,QACrDgC,MAAMxB,Q,iBAbzB,G,OAAsCV,I,i7BCA/B,IAAMmC,EAAb,a,kOAAA,U,QAAA,G,EAAA,E,+YAAA,6D,EAAA,G,EAAA,kBACI,SAAcL,EAAMC,GAChB,OAAO5B,KAAKC,YAAY4B,QAAQF,EAAGC,IAAM,IAFjD,qBAKI,SAAQE,GACJ,IAAM/B,EAAQyB,MAAMC,KAAKK,GAEzB,OADA9B,KAAKW,SAASZ,GACP,IAAIiC,EAAchC,KAAKC,YAAaF,KARnD,kBAWI,SAAKQ,GAED,OADY,IAAIyB,EAAchC,KAAKC,YAAauB,MAAMC,KAAKzB,KAAKD,QACrDgC,MAAMxB,Q,iBAbzB,G,OAAsCV,I,qzBCD/B,IAAMoC,EAAb,WACI,aAA4C,IAAtBlC,EAAsB,uDAAJ,GAAI,eAAtBA,Q,QAD1B,O,EAAA,G,EAAA,oBAGI,WACIC,KAAKD,MAAMM,OAAS,IAJ5B,qBAOI,SAAQQ,GAEJ,OADAb,KAAKD,MAAMW,KAAKG,IACT,IATf,qBAYI,WACI,OAAOb,KAAKkC,KAAO,EAAI,KAAOlC,KAAKD,MAAMoC,UAbjD,kBAgBI,WACI,OAAOnC,KAAKkC,KAAO,EAAI,KAAOlC,KAAKD,MAAM,KAjBjD,gBAoBI,WACI,OAAOC,KAAKD,MAAMM,SArB1B,qBAwBI,WACI,OAAOmB,MAAMC,KAAKzB,KAAKD,Y,iBAzB/B,M,udCKO,IAAMqC,EAAb,WAII,c,4FAAc,SACVpC,KAAKK,OAAS,E,QALtB,O,EAAA,G,EAAA,oBAQI,WACIL,KAAKK,OAAS,EACdL,KAAKqC,UAAOzB,IAVpB,qBAaI,WACI,GAAiB,MAAbZ,KAAKqC,KACL,OAAO,KAGX,IAAMC,EAAOtC,KAAKqC,KAAKE,KAMvB,OALAvC,KAAKqC,KAAKE,KAAOD,EAAKC,OAChBvC,KAAKK,OAAS,IAChBL,KAAKqC,UAAOzB,GAGT0B,EAAKzB,QAxBpB,qBA2BI,SAAQA,GACJ,IAAMwB,EAAsB,CAAExB,SAW9B,OATiB,MAAbb,KAAKqC,KACLA,EAAKE,KAAOF,GAEZA,EAAKE,KAAOvC,KAAKqC,KAAKE,KACtBvC,KAAKqC,KAAKE,KAAOF,GAGrBrC,KAAKqC,KAAOA,IACVrC,KAAKK,QACA,IAvCf,kBA0CI,WACI,OAAoB,MAAbL,KAAKqC,KAAe,KAAOrC,KAAKqC,KAAKE,KAAM1B,QA3C1D,gBA8CI,WACI,OAAOb,KAAKK,SA/CpB,qBAkDI,WAKI,IAJA,IAAMgB,EAAIrB,KAAKK,OACTmC,EAAM,IAAIhB,MAAMH,GAElBoB,EAAMzC,KAAKqC,KACNnC,EAAI,EAAGA,EAAImB,IAAKnB,EACrBuC,EAAMA,EAAKF,KACXC,EAAItC,GAAKuC,EAAI5B,MAGjB,OAAO2B,O,iBA5Df,M,kNCHO,IAAME,EAAb,WACI,WAAsBnC,I,4FAAe,cAAfA,O,QAD1B,O,EAAA,G,EAAA,oBAGI,WACIP,KAAKO,KAAKoC,UAJlB,wBAOI,WACI,OAAO3C,KAAKO,KAAKT,eARzB,qBAWI,SAAQe,GAEJ,OADAb,KAAKO,KAAKG,KAAKG,IACR,IAbf,qBAgBI,WACI,OAAOb,KAAKO,KAAKQ,OAAS,OAjBlC,kBAoBI,WACI,OAAOf,KAAKO,KAAKqC,QAAU,OArBnC,gBAwBI,WACI,OAAO5C,KAAKO,KAAK2B,OAzBzB,qBA4BI,WACI,OAAOlC,KAAKO,KAAKC,e,iBA7BzB,M,YCHIqC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBnC,IAAjBoC,EACH,OAAOA,EAAaxD,QAGrB,IAAIC,EAASoD,EAAyBE,GAAY,CAGjDvD,QAAS,IAOV,OAHAyD,EAAoBF,GAAUtD,EAAQA,EAAOD,QAASsD,GAG/CrD,EAAOD,QCpBfsD,EAAoBzB,EAAK5B,IACxB,IAAIyD,EAASzD,GAAUA,EAAO0D,WAC7B,IAAO1D,EAAiB,QACxB,IAAM,EAEP,OADAqD,EAAoBM,EAAEF,EAAQ,CAAEvB,EAAGuB,IAC5BA,GCLRJ,EAAoBM,EAAI,CAAC5D,EAAS6D,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAE/D,EAAS8D,IAC5EE,OAAOC,eAAejE,EAAS8D,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAoBS,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAoBmB,EAAKzE,IACH,oBAAX0E,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAejE,EAAS0E,OAAOC,YAAa,CAAEtD,MAAO,WAE7D2C,OAAOC,eAAejE,EAAS,aAAc,CAAEqB,OAAO,K","file":"dastal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Dastal\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Dastal\"] = factory();\n\telse\n\t\troot[\"Dastal\"] = factory();\n})(self, function() {\nreturn ","import { Comparator } from '../../comparable';\nimport { Heap } from './heap';\n\nexport abstract class BinaryHeap<T> implements Heap<T> {\n    protected _comparator: Comparator<T>;\n\n    constructor(comparator: Comparator<T>, protected array: Array<T> = []) {\n        this._comparator = comparator;\n    }\n\n    protected abstract ate(a: T, b: T): boolean;\n    abstract heapify(arr: Iterable<T>): BinaryHeap<T>;\n    abstract meld(heap: Heap<T>): BinaryHeap<T>;\n\n    protected _heapify(array: Array<T>): void {\n        let i = Math.floor((array.length + 1) / 2) - 1;\n        while (i >= 0) {\n            this._sinkDown(--i, array);\n        }\n    }\n\n    clear(): void {\n        this.array.length = 0;\n    }\n\n    comparator(): Comparator<T> {\n        return this._comparator;\n    }\n\n    merge(heap: Heap<T>): this {\n        for (const element of heap.toArray()) {\n            this.array.push(element);\n        }\n        this._heapify(this.array);\n\n        return this;\n    }\n\n    peek(): T | undefined {\n        return this.array.length > 0 ? this.array[0] : undefined;\n    }\n\n    pop(): T | undefined {\n        if (this.array.length < 1) {\n            return undefined;\n        }\n\n        // Get the root and the last value\n        const value = this.array[0];\n        const last = this.array.pop();\n\n        // If value != last\n        if (this.array.length > 0) {\n            // Add the last value to\n            // the root and update the heap\n            this.array[0] = last!;\n            this._sinkDown(0, this.array);\n        }\n\n        return value;\n    }\n\n    push(value: T): void {\n        // Add new value to the end of the heap\n        this.array.push(value);\n\n        // Update the heap\n        this._bubbleUp(this.array.length - 1, this.array);\n    }\n\n    // Push a new value to the heap and then pop the root\n    pushPop(value: T): T {\n        // If empty or value is above or equal to root\n        if (this.array.length < 1 || this.ate(value, this.array[0])) {\n            return value;\n        }\n\n        // Swap the root and value\n        const root = this.array[0];\n        this.array[0] = value;\n        this._sinkDown(0, this.array);\n        return root;\n    }\n\n    // Pop the root of the heap and then push a new value\n    replace(value: T): T {\n        // If not empty\n        if (this.array.length > 0) {\n            // Swap the root with value\n            const root = this.array[0];\n            this.array[0] = value;\n            value = root;\n\n            // Update the heap\n            this._sinkDown(0, this.array);\n        }\n\n        return value;\n    }\n\n    get size(): number {\n        return this.array.length;\n    }\n\n    protected _bubbleUp(index: number, array: Array<T>): void {\n        const value = array[index];\n\n        // Until we reach the top of the heap\n        while (index > 0) {\n            // Get the parent\n            const parentIndex = Math.floor((index + 1) / 2) - 1;\n            const parent = array[parentIndex]!;\n\n            // If the parent is above or equal to value, the heap is in order\n            if (this.ate(parent, value)) {\n                break;\n            }\n\n            // Swap the parent with value and continue\n            array[parentIndex] = value;\n            array[index] = parent;\n            index = parentIndex;\n        }\n    }\n\n    protected _sinkDown(index: number, array: Array<T>): void {\n        const n = array.length;\n        const value = array[index];\n\n        do {\n            // Compute the left child's index\n            let childIndex = 2 * index + 1;\n\n            // If no children exist\n            if (childIndex >= n) {\n                break;\n            }\n\n            // Decide which child to compare with\n            let child = array[childIndex];\n            if (childIndex + 1 < n && this.ate(array[childIndex + 1]!, child)) {\n                child = array[++childIndex]!;\n            }\n\n            // If value <= child\n            if (this.ate(value, child)) {\n                break;\n            }\n\n            // Swap value and child\n            array[index] = child;\n            array[childIndex] = value;\n            index = childIndex;\n        } while (true);\n    }\n\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n}\n","import { BinaryHeap } from './binaryHeap';\nimport { Heap } from './heap';\n\nexport class BinaryMaxHeap<T> extends BinaryHeap<T> {\n    protected ate(a: T, b: T): boolean {\n        return this._comparator.compare(a, b) >= 0;\n    }\n\n    heapify(iterable: Iterable<T>): BinaryMaxHeap<T> {\n        const array = Array.from(iterable);\n        this._heapify(array);\n        return new BinaryMaxHeap(this._comparator, array);\n    }\n\n    meld(heap: Heap<T>): BinaryMaxHeap<T> {\n        const out = new BinaryMaxHeap(this._comparator, Array.from(this.array));\n        return out.merge(heap);\n    }\n}\n","import { BinaryHeap } from './binaryHeap';\nimport { Heap } from './heap';\n\nexport class BinaryMinHeap<T> extends BinaryHeap<T> {\n    protected ate(a: T, b: T): boolean {\n        return this._comparator.compare(a, b) <= 0;\n    }\n\n    heapify(iterable: Iterable<T>): BinaryMinHeap<T> {\n        const array = Array.from(iterable);\n        this._heapify(array);\n        return new BinaryMinHeap(this._comparator, array);\n    }\n\n    meld(heap: Heap<T>): BinaryMinHeap<T> {\n        const out = new BinaryMinHeap(this._comparator, Array.from(this.array));\n        return out.merge(heap);\n    }\n}\n","import { Queue } from './queue';\n\nexport class ArrayQueue<T> implements Queue<T> {\n    constructor(protected array: Array<T> = []) {}\n\n    clear(): void {\n        this.array.length = 0;\n    }\n\n    enqueue(value: T): boolean {\n        this.array.push(value);\n        return true;\n    }\n\n    dequeue(): T | null {\n        return this.size < 1 ? null : this.array.shift()!;\n    }\n\n    peek(): T | null {\n        return this.size < 1 ? null : this.array[0];\n    }\n\n    get size(): number {\n        return this.array.length;\n    }\n\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n}\n","import { Queue } from './queue';\n\nexport interface LinkedNode<T> {\n    next?: LinkedNode<T>;\n    value: T;\n}\n\nexport class LinkedQueue<T> implements Queue<T> {\n    protected length: number;\n    protected tail?: LinkedNode<T>;\n\n    constructor() {\n        this.length = 0;\n    }\n\n    clear(): void {\n        this.length = 0;\n        this.tail = undefined;\n    }\n\n    dequeue(): T | null {\n        if (this.tail == null) {\n            return null;\n        }\n\n        const head = this.tail.next!;\n        this.tail.next = head.next;\n        if (--this.length < 1) {\n            this.tail = undefined;\n        }\n\n        return head.value;\n    }\n\n    enqueue(value: T): boolean {\n        const tail: LinkedNode<T> = { value };\n\n        if (this.tail == null) {\n            tail.next = tail;\n        } else {\n            tail.next = this.tail.next;\n            this.tail.next = tail;\n        }\n\n        this.tail = tail;\n        ++this.length;\n        return true;\n    }\n\n    peek(): T | null {\n        return this.tail == null ? null : this.tail.next!.value;\n    }\n\n    get size(): number {\n        return this.length;\n    }\n\n    toArray(): T[] {\n        const n = this.length;\n        const out = new Array(n);\n\n        let par = this.tail;\n        for (let i = 0; i < n; ++i) {\n            par = par!.next!;\n            out[i] = par.value;\n        }\n\n        return out;\n    }\n}\n","import { Comparator, Sorted } from '../../comparable';\nimport { Heap } from '../heap';\nimport { Queue } from './queue';\n\nexport class PriorityQueue<T> implements Queue<T>, Sorted<T> {\n    constructor(protected heap: Heap<T>) {}\n\n    clear(): void {\n        this.heap.clear();\n    }\n\n    comparator(): Comparator<T> {\n        return this.heap.comparator();\n    }\n\n    enqueue(value: T): boolean {\n        this.heap.push(value);\n        return true;\n    }\n\n    dequeue(): T | null {\n        return this.heap.pop() || null;\n    }\n\n    peek(): T | null {\n        return this.heap.peek() || null;\n    }\n\n    get size(): number {\n        return this.heap.size;\n    }\n\n    toArray(): T[] {\n        return this.heap.toArray();\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}