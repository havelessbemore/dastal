{"version":3,"sources":["webpack://Dastal/webpack/universalModuleDefinition","webpack://Dastal/./src/algorithms/heapify.ts","webpack://Dastal/./src/structures/heap/binaryHeap.ts","webpack://Dastal/./src/structures/heap/binaryMaxHeap.ts","webpack://Dastal/./src/structures/heap/binaryMinHeap.ts","webpack://Dastal/./src/structures/list/arrayList.ts","webpack://Dastal/./src/structures/list/linkedList.ts","webpack://Dastal/./src/structures/queue/arrayQueue.ts","webpack://Dastal/./src/structures/queue/heapQueue.ts","webpack://Dastal/./src/structures/queue/listQueue.ts","webpack://Dastal/./src/structures/stack/arrayStack.ts","webpack://Dastal/./src/structures/stack/listStack.ts","webpack://Dastal/./src/utils.ts","webpack://Dastal/webpack/bootstrap","webpack://Dastal/webpack/runtime/compat get default export","webpack://Dastal/webpack/runtime/define property getters","webpack://Dastal/webpack/runtime/hasOwnProperty shorthand","webpack://Dastal/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","maxHeapify","comparator","array","heapify","a","b","compare","minHeapify","ate","i","Math","floor","length","sinkDown","bubbleUp","index","value","parentIndex","parent","n","childIndex","child","BinaryHeap","this","_comparator","element","indexOf","last","pop","heap","toArray","push","undefined","fn","Array","from","BinaryMaxHeap","arrayFrom","BinaryMinHeap","ArrayList","splice","shift","unshift","LinkedList","_get","next","tail","remove","node","head","out","par","ArrayQueue","size","HeapQueue","clear","peek","ListQueue","list","get","ArrayStack","ListStack","iterables","iterable","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"dastal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Dastal\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Dastal\"] = factory();\n\telse\n\t\troot[\"Dastal\"] = factory();\n})(self, function() {\nreturn ","import { Comparator, ComparatorFn } from 'src/comparable';\n\nexport function maxHeapify<T>(comparator: Comparator<T>, array: Array<T>): void {\n    heapify((a, b) => comparator.compare(a, b) >= 0, array);\n}\n\nexport function minHeapify<T>(comparator: Comparator<T>, array: Array<T>): void {\n    heapify((a, b) => comparator.compare(a, b) <= 0, array);\n}\n\nexport function heapify<T>(ate: (a: T, b: T) => boolean, array: Array<T>): void {\n    let i = Math.floor((array.length + 1) / 2) - 1;\n    while (i >= 0) {\n        sinkDown(--i, ate, array);\n    }\n}\n\nexport function bubbleUp<T>(index: number, ate: (a: T, b: T) => boolean, array: Array<T>): void {\n    const value = array[index];\n\n    // Until we reach the top of the heap\n    while (index > 0) {\n        // Get the parent\n        const parentIndex = Math.floor((index + 1) / 2) - 1;\n        const parent = array[parentIndex]!;\n\n        // If the parent is above or equal to value, the heap is in order\n        if (ate(parent, value)) {\n            break;\n        }\n\n        // Swap the parent with value and continue\n        array[parentIndex] = value;\n        array[index] = parent;\n        index = parentIndex;\n    }\n}\n\nexport function sinkDown<T>(index: number, ate: (a: T, b: T) => boolean, array: Array<T>): void {\n    const n = array.length;\n    const value = array[index];\n\n    do {\n        // Compute the left child's index\n        let childIndex = 2 * index + 1;\n\n        // If no children exist\n        if (childIndex >= n) {\n            break;\n        }\n\n        // Decide which child to compare with\n        let child = array[childIndex];\n        if (childIndex + 1 < n && ate(array[childIndex + 1]!, child)) {\n            child = array[++childIndex]!;\n        }\n\n        // If value <= child\n        if (ate(value, child)) {\n            break;\n        }\n\n        // Swap value and child\n        array[index] = child;\n        array[childIndex] = value;\n        index = childIndex;\n    } while (true);\n}\n","import { bubbleUp, heapify, sinkDown } from 'src/algorithms';\nimport { Comparator } from 'src/comparable';\nimport { Heap } from './heap';\n\nexport abstract class BinaryHeap<T> implements Heap<T> {\n    protected _comparator: Comparator<T>;\n\n    constructor(comparator: Comparator<T>, protected array: Array<T> = []) {\n        this._comparator = comparator;\n    }\n\n    protected abstract ate(a: T, b: T): boolean;\n    abstract heapify(...iterables: Iterable<T>[]): BinaryHeap<T>;\n\n    clear(): void {\n        this.array.length = 0;\n    }\n\n    comparator(): Comparator<T> {\n        return this._comparator;\n    }\n\n    contains(element: T): boolean {\n        return this.array.indexOf(element) >= 0;\n    }\n\n    delete(element: T): boolean {\n        const index = this.array.indexOf(element);\n        if (index < 0) {\n            return false;\n        }\n\n        // If deleting the last value\n        const last = this.array.pop()!;\n        if (index >= this.array.length) {\n            return true;\n        }\n\n        // Add the last value to the\n        // deleted index and update the heap\n        this.array[index] = last;\n        sinkDown(index, (a, b) => this.ate(a, b), this.array);\n        return true;\n    }\n\n    merge(heap: Heap<T>): this {\n        for (const element of heap.toArray()) {\n            this.array.push(element);\n        }\n        heapify((a, b) => this.ate(a, b), this.array);\n        return this;\n    }\n\n    peek(): T | undefined {\n        return this.array.length > 0 ? this.array[0] : undefined;\n    }\n\n    pop(): T | undefined {\n        if (this.array.length < 1) {\n            return undefined;\n        }\n\n        // Get the root and the last value\n        const value = this.array[0];\n        const last = this.array.pop();\n\n        // If value != last\n        if (this.array.length > 0) {\n            // Add the last value to\n            // the root and update the heap\n            this.array[0] = last!;\n            sinkDown(0, (a, b) => this.ate(a, b), this.array);\n        }\n\n        return value;\n    }\n\n    push(value: T): void {\n        // Add new value to the end of the heap\n        this.array.push(value);\n\n        // Update the heap\n        bubbleUp(this.array.length - 1, (a, b) => this.ate(a, b), this.array);\n    }\n\n    // Push a new value to the heap and then pop the root\n    pushPop(value: T): T {\n        // If empty or value is above or equal to root\n        if (this.array.length < 1 || this.ate(value, this.array[0])) {\n            return value;\n        }\n\n        // Swap the root and value\n        const root = this.array[0];\n        this.array[0] = value;\n        sinkDown(0, (a, b) => this.ate(a, b), this.array);\n        return root;\n    }\n\n    // Pop the root of the heap and then push a new value\n    replace(value: T): T {\n        // If not empty\n        if (this.array.length > 0) {\n            // Swap the root with value\n            const root = this.array[0];\n            this.array[0] = value;\n            value = root;\n\n            // Update the heap\n            sinkDown(0, (a, b) => this.ate(a, b), this.array);\n        }\n\n        return value;\n    }\n\n    get size(): number {\n        return this.array.length;\n    }\n\n    update(element: T): boolean {\n        const index = this.array.indexOf(element);\n        if (index < 0) {\n            return false;\n        }\n        const fn = (a: T, b: T) => this.ate(a, b);\n        sinkDown(index, fn, this.array);\n        bubbleUp(index, fn, this.array);\n        return true;\n    }\n\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n}\n","import { BinaryHeap } from './binaryHeap';\nimport { maxHeapify } from 'src/algorithms/heapify';\nimport { arrayFrom } from 'src/utils';\n\nexport class BinaryMaxHeap<T> extends BinaryHeap<T> {\n    protected ate(a: T, b: T): boolean {\n        return this._comparator.compare(a, b) >= 0;\n    }\n\n    heapify(...iterables: Iterable<T>[]): BinaryMaxHeap<T> {\n        const array = arrayFrom(...iterables);\n        maxHeapify(this._comparator, array);\n        return new BinaryMaxHeap(this._comparator, array);\n    }\n}\n","import { BinaryHeap } from './binaryHeap';\nimport { minHeapify } from 'src/algorithms/heapify';\nimport { arrayFrom } from 'src/utils';\n\nexport class BinaryMinHeap<T> extends BinaryHeap<T> {\n    protected ate(a: T, b: T): boolean {\n        return this._comparator.compare(a, b) <= 0;\n    }\n\n    heapify(...iterables: Iterable<T>[]): BinaryMinHeap<T> {\n        const array = arrayFrom(...iterables);\n        minHeapify(this._comparator, array);\n        return new BinaryMinHeap(this._comparator, array);\n    }\n}\n","import { List } from './list';\n\nexport class ArrayList<T> implements List<T> {\n    protected array: Array<T>;\n\n    constructor(array: Array<T> = []) {\n        this.array = array;\n    }\n\n    add(index: number, value: T): boolean {\n        this.array.splice(index, 0, value);\n        return true;\n    }\n\n    clear(): void {\n        this.array.length = 0;\n    }\n\n    get(index: number): T | undefined {\n        return this.array[index];\n    }\n\n    pop(): T | undefined {\n        return this.array.pop();\n    }\n\n    push(value: T): boolean {\n        this.array.push(value);\n        return true;\n    }\n\n    remove(index: number): T | undefined {\n        return this.array.splice(index, 1)[0];\n    }\n\n    set(index: number, element: T): T | undefined {\n        if (index < 0 || index >= this.array.length) {\n            return undefined;\n        }\n        const value = this.array[index];\n        this.array[index] = element;\n        return value;\n    }\n\n    shift(): T | undefined {\n        return this.array.shift();\n    }\n\n    get size(): number {\n        return this.array.length;\n    }\n\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n\n    unshift(value: T): boolean {\n        this.array.unshift(value);\n        return true;\n    }\n}\n","import { List } from './list';\n\nexport interface LinkedNode<T> {\n    next: LinkedNode<T>;\n    value: T;\n}\n\nexport class LinkedList<T> implements List<T> {\n    protected length: number;\n    protected tail?: LinkedNode<T>;\n\n    constructor() {\n        this.length = 0;\n    }\n\n    add(index: number, value: T): boolean {\n        if (index < 0 || index > this.length) {\n            return false;\n        }\n        if (index === this.length) {\n            return this.push(value);\n        }\n        ++this.length;\n        const parent = this._get(index - 1);\n        parent.next = { value, next: parent.next };\n        return true;\n    }\n\n    clear(): void {\n        this.length = 0;\n        this.tail = undefined;\n    }\n\n    get(index: number): T | undefined {\n        if (index < 0 || index >= this.length) {\n            return undefined;\n        }\n        return this._get(index).value;\n    }\n\n    push(value: T): boolean {\n        this.unshift(value);\n        this.tail = this.tail!.next;\n        return true;\n    }\n\n    pop(): T | undefined {\n        return this.remove(this.length - 1);\n    }\n\n    remove(index: number): T | undefined {\n        if (index < 0 || index >= this.length) {\n            return undefined;\n        }\n\n        const parent = this._get(index - 1);\n        const value = parent.next.value;\n        parent.next = parent.next.next;\n        if (--this.length < 1) {\n            this.tail = undefined;\n        }\n        return value;\n    }\n\n    set(index: number, element: T): T | undefined {\n        if (index < 0 || index >= this.length) {\n            return undefined;\n        }\n        const node = this._get(index);\n        const value = node.value;\n        node.value = element;\n        return value;\n    }\n\n    shift(): T | undefined {\n        if (this.tail == null) {\n            return undefined;\n        }\n\n        const head = this.tail.next;\n        this.tail.next = head.next;\n        if (--this.length < 1) {\n            this.tail = undefined;\n        }\n\n        return head.value;\n    }\n\n    get size(): number {\n        return this.length;\n    }\n\n    toArray(): T[] {\n        const n = this.length;\n        const out = new Array(n);\n\n        let par = this.tail;\n        for (let i = 0; i < n; ++i) {\n            par = par!.next;\n            out[i] = par.value;\n        }\n\n        return out;\n    }\n\n    unshift(value: T): boolean {\n        const head: LinkedNode<T> = { value } as any;\n        ++this.length;\n\n        if (this.tail == null) {\n            head.next = head;\n            this.tail = head;\n        } else {\n            head.next = this.tail.next;\n            this.tail.next = head;\n        }\n\n        return true;\n    }\n\n    protected _get(index: number): LinkedNode<T> {\n        let node = this.tail!;\n        while (index-- >= 0) {\n            node = node.next;\n        }\n        return node;\n    }\n}\n","import { Queue } from './queue';\n\nexport class ArrayQueue<T> implements Queue<T> {\n    constructor(protected array: Array<T> = []) {}\n\n    clear(): void {\n        this.array.length = 0;\n    }\n\n    enqueue(value: T): boolean {\n        this.array.push(value);\n        return true;\n    }\n\n    dequeue(): T | undefined {\n        return this.size < 1 ? undefined : this.array.shift()!;\n    }\n\n    peek(): T | undefined {\n        return this.size < 1 ? undefined : this.array[0];\n    }\n\n    get size(): number {\n        return this.array.length;\n    }\n\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n}\n","import { Comparator } from 'src/comparable';\nimport { Sorted } from 'src/sortable';\nimport { Heap } from '../heap';\nimport { Queue } from './queue';\n\nexport class HeapQueue<T> implements Queue<T>, Sorted<T> {\n    constructor(protected heap: Heap<T>) {}\n\n    clear(): void {\n        this.heap.clear();\n    }\n\n    comparator(): Comparator<T> {\n        return this.heap.comparator();\n    }\n\n    enqueue(value: T): boolean {\n        this.heap.push(value);\n        return true;\n    }\n\n    dequeue(): T | undefined {\n        return this.heap.pop();\n    }\n\n    peek(): T | undefined {\n        return this.heap.peek();\n    }\n\n    get size(): number {\n        return this.heap.size;\n    }\n\n    toArray(): T[] {\n        return this.heap.toArray();\n    }\n}\n","import { LinkedList, List } from '../list';\nimport { Queue } from './queue';\n\nexport class ListQueue<T> implements Queue<T> {\n    protected list: List<T>;\n\n    constructor(list: List<T> = new LinkedList()) {\n        this.list = list;\n    }\n\n    clear(): void {\n        this.list.clear();\n    }\n\n    dequeue(): T | undefined {\n        return this.list.shift();\n    }\n\n    enqueue(value: T): boolean {\n        return this.list.push(value);\n    }\n\n    peek(): T | undefined {\n        return this.list.get(0);\n    }\n\n    get size(): number {\n        return this.list.size;\n    }\n\n    toArray(): T[] {\n        return this.list.toArray();\n    }\n}\n","import { Stack } from './stack';\n\nexport class ArrayStack<T> implements Stack<T> {\n    constructor(protected array: Array<T> = []) {}\n    /**\n     * Removes all elements from the stack\n     */\n    clear(): void {\n        this.array.length = 0;\n    }\n    /**\n     * Retrieves, but does not remove, the top of the stack\n     *\n     * @returns The value at the top of the stack or `undefined` if empty.\n     */\n    peek(): T | undefined {\n        return this.array[this.array.length - 1];\n    }\n    /**\n     * Retrieves and removes the top of the stack\n     *\n     * @returns The value at the top of the stack or `undefined` if empty.\n     */\n    pop(): T | undefined {\n        return this.array.pop();\n    }\n    /**\n     * Inserts a value into the stack\n     *\n     * @param element - The value to be inserted\n     *\n     * @returns `true` upon success, otherwise `false`\n     */\n    push(element: T): boolean {\n        this.array.push(element);\n        return true;\n    }\n    /**\n     * The number of elements in the stack\n     */\n    get size(): number {\n        return this.array.length;\n    }\n    /**\n     * Convert the stack into an array\n     */\n    toArray(): T[] {\n        return Array.from(this.array);\n    }\n}\n","import { ArrayList, List } from '../list';\nimport { Stack } from './stack';\n\nexport class ListStack<T> implements Stack<T> {\n    constructor(protected list: List<T> = new ArrayList()) {}\n    /**\n     * Removes all elements from the stack\n     */\n    clear(): void {\n        this.list.clear();\n    }\n    /**\n     * Retrieves, but does not remove, the top of the stack\n     *\n     * @returns The value at the top of the stack or `undefined` if empty.\n     */\n    peek(): T | undefined {\n        return this.list.get(this.list.size - 1);\n    }\n    /**\n     * Retrieves and removes the top of the stack\n     *\n     * @returns The value at the top of the stack or `undefined` if empty.\n     */\n    pop(): T | undefined {\n        return this.list.pop();\n    }\n    /**\n     * Inserts a value into the stack\n     *\n     * @param element - The value to be inserted\n     *\n     * @returns `true` upon success, otherwise `false`\n     */\n    push(element: T): boolean {\n        return this.list.push(element);\n    }\n    /**\n     * The number of elements in the stack\n     */\n    get size(): number {\n        return this.list.size;\n    }\n    /**\n     * Convert the stack into an array\n     */\n    toArray(): T[] {\n        return this.list.toArray();\n    }\n}\n","export function arrayFrom<T>(...iterables: Iterable<T>[]): Array<T> {\n    const array = [];\n    for (const iterable of iterables) {\n        for (const element of iterable) {\n            array.push(element);\n        }\n    }\n    return array;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}